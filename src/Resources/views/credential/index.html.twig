{% extends  "base.html.twig" %}

{% block page_title %}{{ 'title.admin_rights' | trans({}, 'CredentialBundle') }}{% endblock %}

{% block main %}
    {{ parent() }}

    <div class="page-header">
        <h2 class="title">{{ 'title.rights' | trans({}, 'CredentialBundle') }}</h2>
    </div>
    <style>
        .bundle-credential .table-striped > tbody > tr:nth-of-type(odd) {
            background-color: #DDD;
        }

        .bundle-credential .table {
            margin-bottom: 0px;
        }

        .bundle-credential .all-roles {
            width: 450px;
        }
    </style>

    <div class="bundle-credential box box-primary" style="border:1px solid #ccc; padding:5px; border-top:2px solid #3299DC;">

        {% set rubrique = '###' %}
        {% set rubriqueId = 0 %}
        {% for cred in credentials %}
        {% if( rubrique != cred.rubrique) %}
        {% set rubrique = cred.rubrique %}
        {% set rubriqueId = rubriqueId + 1 %}
        {% if not loop.first %}</table>{% endif %}

        <div style="background-color: #CECECE; text-align: center; padding:3px;">
            <strong>
                {% if rubrique == '' %}{{ 'title.unknown_heading' | trans({}, 'CredentialBundle') }}{% else %}{{ rubrique  ?? ('title.unknown_heading' | trans({}, 'CredentialBundle')) }}{% endif %}
                <span id="btn-toggle-rubrique-{{ rubriqueId }}" onclick="toggleData('{{ rubriqueId }}')" class="fa fa-minus-square pull-right"></span>
            </strong>
        </div>
        <table class="table table-responsive table-bordered table-striped">

            <tr class="rubrique-groupe-data-{{ rubriqueId }}">
                <th class="all-roles">{{ 'title.all_roles' | trans({}, 'CredentialBundle') }}</th>
                {% for group in groupes %}
                    <th style="background-color: #e2dfdf; vertical-align: bottom">
                        <div style="writing-mode: vertical-lr;">{{ group.libelle ?? group.name|lower|humanize }}&nbsp;</div>
                        &nbsp;<input autocomplete="off" data-rubrique="{{ rubriqueId }}" data-group="{{ group.id }}" id="lle-credential-cb-{{ rubriqueId }}-{{ group.id }}" class="checbox-all" type="checkbox" onclick="checkAllCbOfRubriqueForGroupe('{{ group.id }}', '{{ rubriqueId }}', '{{ rubrique }}', this)">
                    </th>
                {% endfor %}
            </tr>
            {% endif %}
            <tr class="rubrique-groupe-data-{{ rubriqueId }}">
                <th>{{ cred.libelle ?? cred|lower|humanize }}</th>
                {% for group in groupes %}
                    <td>
                        <input autocomplete="off" type="checkbox" data-rubrique="{{ rubriqueId }}" data-group="{{ group.id }}" class="lle-credential-cb cb-rubrique-{{ rubriqueId }}-group-{{ group.id }}" id="{{ group.name }}-{{ cred.role }}"
                                {% if actives[group.name ~ '-' ~ cred.role] ?? false %} checked="checked" {% endif %}
                        >
                    </td>
                {% endfor %}
            </tr>
            {% endfor %}
        </table>
    </div>

    <script>
        function toggleData(rubriqueId) {

            let rubriqueGroupe = document.querySelector(".rubrique-groupe-data-" + rubriqueId);
            let rubriqueButton = document.getElementById("btn-toggle-rubrique-" + rubriqueId)

            if (rubriqueGroupe.style.display === "none") {
                rubriqueGroupe.style.display = "block";
                rubriqueButton.classList.add("fa-minus-square");
                rubriqueButton.classList.remove("fa-plus-square");
            } else if (rubriqueGroupe.style.display === "block") {
                rubriqueGroupe.style.display = "none";
                rubriqueButton.classList.add("fa-plus-square");
                rubriqueButton.classList.remove("fa-minus-square");
            }
        }

        function checkAllCbOfRubriqueForGroupe(group, rubriqueId, rubrique, cb) {
            let checkboxes = document.querySelectorAll('.cb-rubrique-' + rubriqueId + '-group-' + group);
            let shouldCheck = window.confirm('{{ 'label.enable_or_disable' | trans({}, 'CredentialBundle') }}' + ' ' + checkboxes.length + ' ' + '{{ 'label.roles_question' | trans({}, 'CredentialBundle') }}');

            if (shouldCheck) {
                checkboxes.forEach(checkbox => {
                    checkbox.checked = cb.checked;
                });

                var data = new FormData();
                data.append('group', group);
                data.append('rubrique', rubrique);
                data.append('checked', cb.checked);

                fetch("/admin/credential/check_all", {
                    method: "POST",
                    body: data,
                });
            } else {
                cb.checked = !cb.checked;
            }
        }

        window.onload = () => {

            let checkboxesAll = document.querySelectorAll('.checbox-all');

            checkboxesAll.forEach(checkbox => {
                let rubrique = checkbox.dataset.rubrique;
                let group = checkbox.dataset.group;

                let checkedChildCheckboxes = document.querySelectorAll('.cb-rubrique-' + rubrique + '-group-' + group + ':checked');
                let totalChildCheckboxes = document.querySelectorAll('.cb-rubrique-' + rubrique + '-group-' + group);

                //all checkboxes are checked. So the "All" checkbox must be checked aswell
                if (checkedChildCheckboxes.length == totalChildCheckboxes.length) {
                    checkbox.checked = true;
                } else {
                    checkbox.checked = false;
                }
            });
        }

        let ready = (callback) => {
            if (document.readyState != "loading") callback();
            else document.addEventListener("DOMContentLoaded", callback);
        }

        ready(() => {
            let checkboxes = document.querySelectorAll(".lle-credential-cb");

            checkboxes.forEach(checkbox => {
                checkbox.addEventListener("change", (e) => {
                    let checkbox = e.target;
                    let allchecked = true;

                    let rubrique = checkbox.dataset.rubrique;
                    let group = checkbox.dataset.group;

                    if (checkbox.checked) {

                        document.querySelectorAll('.cb-rubrique-' + rubrique + '-group-' + group).forEach((c) => {
                            if (!c.checked) {
                                allchecked = false;
                            }
                        });

                        if (allchecked) {
                            document.getElementById('lle-credential-cb-' + rubrique + '-' + group).checked = true;
                        }
                    } else {
                        document.getElementById('lle-credential-cb-' + rubrique + '-' + group).checked = false;
                    }

                    let data = new FormData();
                    data.append("id", checkbox.id);
                    fetch("/admin/credential/toggle", {
                        method: "POST",
                        body: data,
                    })
                });
            });
        });
    </script>
{% endblock %}
