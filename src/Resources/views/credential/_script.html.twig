<script>
    let ready = (callback) => {
        if (document.readyState != 'loading') callback();
        else document.addEventListener('DOMContentLoaded', callback);
    };

    ready(() => {
        check();

        // All checkoxes of a group
        const checkboxCheckGroup = document.querySelectorAll('.lle-credential-cb-check-group');

        // All checkboxes of a group in a rubrique
        const checkboxCheckRubrique = document.querySelectorAll('.lle-credential-cb-check-rubrique');

        // A checkbox of a group in a rubrique
        const checkboxes = document.querySelectorAll('.lle-credential-cb');

        // A checkbox of a group for a credential to allowed status
        const checkboxesStatusAllowed = document.querySelectorAll('.cb-group-credential-status-allowed');

        // A checkbox of a group for a credential for a status
        const checkboxesAllowCredentialForStatus = document.querySelectorAll('.cb-group-credential-allowed-by-status');

        // Icon + or -
        const toggleCheckboxes = document.querySelectorAll('[data-toggle-rubrique]');

        // Hide/show rubrique
        for (let checkbox of toggleCheckboxes) {
            checkbox.addEventListener('click', function () {
                let rubriquesGroupe = document.querySelectorAll('.rubrique-groupe-data-' + checkbox.dataset.toggleRubrique);

                for (let rubriqueGroupe of rubriquesGroupe) {
                    if (checkbox.dataset.rubriqueVisible === 'true') {
                        rubriqueGroupe.style.display = 'none';
                    } else {
                        rubriqueGroupe.style.display = 'table-row';
                    }
                }

                if (checkbox.dataset.rubriqueVisible === 'true') {
                    checkbox.dataset.rubriqueVisible = 'false';
                } else {
                    checkbox.dataset.rubriqueVisible = 'true';
                }

                checkbox.classList.toggle('fa-minus-square');
                checkbox.classList.toggle('fa-plus-square');
            });
        }

        // Check all checkboxes of a group
        for (let checkbox of checkboxCheckGroup) {
            checkbox.addEventListener('change', function () {
                let checkboxes = document.querySelectorAll('.cb-group-' + this.dataset.group);
                let shouldCheck = window.confirm('{{ 'label.enable_or_disable' | trans({}, 'CredentialBundle') }}' + ' ' + checkboxes.length + ' ' + '{{ 'label.roles_question' | trans({}, 'CredentialBundle') }}');

                if (shouldCheck) {
                    checkboxes.forEach(checkbox => {
                        checkbox.checked = this.checked;
                    });

                    let data = new FormData();
                    data.append('group', this.dataset.group);
                    data.append('checked', this.checked);

                    fetch('/admin/credential/toggle_all', {
                        method: 'POST',
                        body: data,
                    });
                } else {
                    this.checked = !this.checked;
                }

                check();
            });
        }

        // Check all checkboxes of a group in a rubrique
        for (let checkbox of checkboxCheckRubrique) {
            checkbox.addEventListener('change', function () {
                let checkboxes = document.querySelectorAll('.cb-rubrique-' + this.dataset.rubriqueId + '-group-' + this.dataset.group);
                let shouldCheck = window.confirm('{{ 'label.enable_or_disable' | trans({}, 'CredentialBundle') }}' + ' ' + checkboxes.length + ' ' + '{{ 'label.roles_question' | trans({}, 'CredentialBundle') }}');

                if (shouldCheck) {
                    checkboxes.forEach(checkbox => {
                        checkbox.checked = this.checked;
                    });

                    let data = new FormData();
                    data.append('group', this.dataset.group);
                    data.append('rubrique', this.dataset.rubriqueName);
                    data.append('checked', this.checked);

                    fetch('/admin/credential/toggle_all', {
                        method: 'POST',
                        body: data,
                    });
                } else {
                    this.checked = !this.checked;
                }

                check();
            });
        }

        // Check a checkbox of a group in a rubrique
        for (checkbox of checkboxes) {
            checkbox.addEventListener('change', function () {
                let data = new FormData();
                data.append('id', this.id);

                fetch('/admin/credential/toggle', {
                    method: 'POST',
                    body: data,
                });

                check();
            });
        }

        // Check a checkbox of a group for a credential to allowed status
        for (checkbox of checkboxesStatusAllowed) {
            checkbox.addEventListener('change', function () {
                let data = new FormData();
                let id = this.id;
                data.append('id', id);

                let group = id.split('-')[0];
                let credential = id.split('-')[1];

                let checkboxToCheck = document.getElementById(group + '-' + credential + '-status');
                let checkboxesToShow = document.getElementById('show-all-status-checkboxes-' + group + '-' + credential);

                if (checkboxToCheck.checked) {
                    checkboxesToShow.classList.remove('d-none');
                } else {
                    checkboxesToShow.classList.add('d-none');
                }

                fetch('/admin/credential/allowed_status', {
                    method: 'POST',
                    body: data,
                });
            });
        }

        // Check a checkbox of a group for a credential for a status
        for (checkbox of checkboxesAllowCredentialForStatus) {
            checkbox.addEventListener('change', function () {
                let data = new FormData();
                data.append('id', this.id);

                fetch('/admin/credential/allowed_for_status', {
                    method: 'POST',
                    body: data,
                });
            });
        }
    });

    function check() {
        // All checkoxes of a group
        const checkboxCheckGroup = document.querySelectorAll('.lle-credential-cb-check-group');

        // All checkboxes of a group in a rubrique
        const checkboxCheckRubrique = document.querySelectorAll('.lle-credential-cb-check-rubrique');

        // Check checkboxRubrique if all checkboxes are checked
        for (let checkboxRubrique of checkboxCheckRubrique) {
            let group = checkboxRubrique.dataset.group;
            let rubrique = checkboxRubrique.dataset.rubriqueId;

            let checkboxes = document.querySelectorAll('.cb-rubrique-' + rubrique + '-group-' + group);
            let allChecked = true;

            for (checkbox of checkboxes) {
                if (!checkbox.checked) {
                    allChecked = false;
                    break;
                }
            }

            checkboxRubrique.checked = allChecked;
        }

        // Check checkboxGroup if all checkboxRubrique are checked
        for (let checkboxGroup of checkboxCheckGroup) {
            let group = checkboxGroup.dataset.group;

            let checkboxesRubrique = document.querySelectorAll('.cb-group-' + group);
            let allRubriqueChecked = true;

            for (let checkboxRubrique of checkboxesRubrique) {
                if (!checkboxRubrique.checked) {
                    allRubriqueChecked = false;
                    break;
                }
            }

            checkboxGroup.checked = allRubriqueChecked;
        }
    }
</script>
